(function(r,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("graphql")):typeof define=="function"&&define.amd?define(["exports","graphql"],e):(r=typeof globalThis<"u"?globalThis:r||self,e(r["graphql-query-merger"]={},r.graphql))})(this,function(r,e){"use strict";const l=(m,o,d)=>{const s={},u={},a=e.visit(m,{[e.Kind.VARIABLE_DEFINITION](n){const i=n.variable.name.value,t=`${i}_${d}`;return s[i]=t,{...n,variable:{...n.variable,name:{kind:e.Kind.NAME,value:t}}}},[e.Kind.VARIABLE](n){const i=n.name.value,t=s[i]||i;return{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.FRAGMENT_DEFINITION](n){const i=n.name.value,t=`${i}_${d}`;return u[i]=t,{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.FRAGMENT_SPREAD](n){const i=n.name.value,t=u[i]||i;return{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.DIRECTIVE](n){return e.visit(n,{[e.Kind.VARIABLE](i){const t=i.name.value,E=s[t]||t;return{...i,name:{kind:e.Kind.NAME,value:E}}}})}}),c={};for(const[n,i]of Object.entries(o)){const t=s[n]||n;c[t]=i}return{document:a,variables:c}};class N{constructor(o){this.operationName=o,this.documents=[],this.internalVariables=[],this.uniqueIdCounter=1,this.operationType=null}push(o,d={}){typeof o=="string"&&(o=e.parse(o));const s=this.uniqueIdCounter++,{document:u,variables:a}=l(o,d,s),c=u.definitions.filter(i=>i.kind===e.Kind.OPERATION_DEFINITION);if(c.length===0)throw new Error("No se encontró una definición de operación en el documento proporcionado.");const n=c[0].operation;if(this.operationType&&this.operationType!==n)throw new Error(`No se pueden combinar diferentes tipos de operaciones: ${this.operationType} y ${n}.`);return this.operationType=n,this.documents.push(u),this.internalVariables.push(a),this}get query(){const o=[],d=[],s=[];for(const u of this.documents)for(const a of u.definitions)a.kind===e.Kind.OPERATION_DEFINITION?(o.push(...a.variableDefinitions||[]),d.push(...a.selectionSet.selections)):a.kind===e.Kind.FRAGMENT_DEFINITION&&s.push(a);return{kind:e.Kind.DOCUMENT,definitions:[{kind:e.Kind.OPERATION_DEFINITION,operation:this.operationType,name:{kind:e.Kind.NAME,value:this.operationName||""},variableDefinitions:o,selectionSet:{kind:e.Kind.SELECTION_SET,selections:d}},...s]}}get variables(){return Object.assign({},...this.internalVariables)}}const f=(m="")=>new N(m);r.mergeQueries=f,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
