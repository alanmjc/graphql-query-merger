(function(a,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("graphql")):typeof define=="function"&&define.amd?define(["exports","graphql"],e):(a=typeof globalThis<"u"?globalThis:a||self,e(a["graphql-query-merger"]={},a.graphql))})(this,function(a,e){"use strict";const N=(m,o,u)=>{const s={},d={},r=e.visit(m,{[e.Kind.VARIABLE_DEFINITION](n){const i=n.variable.name.value,t=`${i}_${u}`;return s[i]=t,{...n,variable:{...n.variable,name:{kind:e.Kind.NAME,value:t}}}},[e.Kind.VARIABLE](n){const i=n.name.value,t=s[i]||i;return{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.FRAGMENT_DEFINITION](n){const i=n.name.value,t=`${i}_${u}`;return d[i]=t,{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.FRAGMENT_SPREAD](n){const i=n.name.value,t=d[i]||i;return{...n,name:{kind:e.Kind.NAME,value:t}}},[e.Kind.DIRECTIVE](n){return e.visit(n,{[e.Kind.VARIABLE](i){const t=i.name.value,E=s[t]||t;return{...i,name:{kind:e.Kind.NAME,value:E}}}})}}),c={};for(const[n,i]of Object.entries(o)){const t=s[n]||n;c[t]=i}return{document:r,variables:c}};class f{constructor(o){this.operationName=o,this.documents=[],this.internalVariables=[],this.uniqueIdCounter=1,this.operationType=null}push(o,u={}){typeof o=="string"&&(o=e.parse(o));const s=this.uniqueIdCounter++,{document:d,variables:r}=N(o,u,s),c=d.definitions.filter(i=>i.kind===e.Kind.OPERATION_DEFINITION);if(c.length===0)throw new Error("No operation definition found in the provided document.");const n=c[0].operation;if(this.operationType&&this.operationType!==n)throw new Error(`Cannot merge different operation types: ${this.operationType} and ${n}.`);return this.operationType=n,this.documents.push(d),this.internalVariables.push(r),this}get query(){const o=[],u=[],s=[];for(const d of this.documents)for(const r of d.definitions)r.kind===e.Kind.OPERATION_DEFINITION?(o.push(...r.variableDefinitions||[]),u.push(...r.selectionSet.selections)):r.kind===e.Kind.FRAGMENT_DEFINITION&&s.push(r);return{kind:e.Kind.DOCUMENT,definitions:[{kind:e.Kind.OPERATION_DEFINITION,operation:this.operationType,name:{kind:e.Kind.NAME,value:this.operationName||""},variableDefinitions:o,selectionSet:{kind:e.Kind.SELECTION_SET,selections:u}},...s]}}getQueryString(){return e.print(this.query)}get variables(){return Object.assign({},...this.internalVariables)}}const l=(m="")=>new f(m);a.mergeQueries=l,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
